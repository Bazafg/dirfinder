#Recursive scan options
[RecursiveScan]
#recursive scan:Close:0;Open:1
conf.recursive_scan = 0
#Recursive scanning if these status codes
conf.recursive_status_code = [301,403]
#Exit the scan when the URL exceeds this length
conf.recursive_scan_max_url_length = 60
#These suffix names are not recursive
conf.recursive_blacklist_exts = ["html",'htm','shtml','png','jpg','webp','bmp','js','css','pdf','ini','mp3','mp4']
#The directory does not scan
#conf.exclude_subdirs = ['/test1','/test2']
conf.exclude_subdirs = ""

#Processing scan mode
[ScanModeHandler]
#Dict mode:Close :0;single dict:1;multiple dict:2
conf.dict_mode = 1
#Single dictionary file path
conf.dict_mode_load_single_dict = "onez.txt"
#Multiple dictionary file path
conf.dict_mode_load_mult_dict = "dictmult"
#Blast mode:tips:Use "conf.file_extension" options for suffixes
conf.blast_mode = 0
#Minimum length of character set
conf.blast_mode_min = 3
#Maximum length of character set
conf.blast_mode_max = 3
#The default character set:a-z
conf.blast_mode_az = "abcdefghijklmnopqrstuvwxyz"
#The default character set:0-9
conf.blast_mode_num = "0123456789"
#Custom character set
conf.blast_mode_custom_charset = "abc"
#Custom continue to generate blast dictionary location
conf.blast_mode_resume_charset = ""
#Crawl mode:Close :0;Open:1
conf.crawl_mode = 0
#Crawl mode dynamic fuzz suffix dict
conf.crawl_mode_dynamic_fuzz_suffix = "crawl_mode_suffix.txt"
#Parse robots.txt file
conf.crawl_mode_parse_robots = 0
#An xpath expression used by a crawler to parse an HTML document
conf.crawl_mode_parse_html = "//*/@href | //*/@src | //form/@action"
#Whether to turn on the dynamically generated payloads:close:0;open:1
conf.crawl_mode_dynamic_fuzz = 0
#Fuzz mode:Close :0;single dict:1;multiple dict:2
conf.fuzz_mode = 0
#Single dictionary file path.You can customize the dictionary path. The labels are just a flag for insert dict.
conf.fuzz_mode_load_single_dict = "fuzz_mode_dir.txt"
#Multiple dictionary file path
conf.fuzz_mode_load_mult_dict = "fuzzmult"
#Set the label of fuzz.e.g:{dir};{ext}
#conf.fuzz_mode_label = "{dir}"
conf.fuzz_mode_label = "{dir}"

#Processing payloads
[PayloadHandler]

#Processing requests
[RequestHandler]
#Custom request header.e.g:test1=test1,test2=test2
conf.request_headers = ""
#Custom request user-agent
conf.request_header_ua = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36"
#Custom request cookie.e.g:cookie1=cookie1; cookie2=cookie2;
conf.request_header_cookie = ""
#Custom 401 certification
conf.request_header_401_auth = ""
#Custom request methods (get, head)
conf.request_method = "get"
#Custom per request timeout in x sec.
conf.request_timeout = 1
#Custom per request delay random(0-x) secends.The parameter must be an integer.
conf.request_delay = 0
#Custom all request limit,default 30 coroutines
conf.request_limit = 7
#Custom request max retries
conf.request_max_retries = 1
#Whether to open an HTTP persistent connection
conf.request_persistent_connect = 0
#Whether to follow 302 redirection
conf.redirection_302 = True
#Payload add file extension
conf.file_extension = ""

#Processing responses
[ResponseHandler]
#Sets the response status code to record
conf.response_status_code = [200]
#Whether to record content-type
conf.response_header_content_type = 1
#Whether to record page size
conf.response_size = 1
#Auto check 404 page
conf.auto_check_404_page = True
#Custom 503 page regex
conf.custom_503_page = "page 503"
#Custom regular match response content
# conf.custom_response_page = "([0-9]){3}([a-z]){3}test"
conf.custom_response_page = ""
#Skip files of size x bytes.you must be set "None",if don't want to skip any file.e.g:None;0b;1k;1m
conf.skip_size = "None"

#Processing proxy
[ProxyHandler]
conf.proxy_server = None # {"http":"http://5.161.93.53:1080","http":"http://198.8.94.170:4145","http":"http://196.216.85.246:8080","http":"http://154.201.45.191:3128","http":"http://177.93.38.238:8080","http":"http://167.172.150.160:80","http":"http://120.220.220.95:8085","http":"http://208.67.183.240:80","http":"http://51.159.66.158:3128","http":"http://80.240.202.218:8080","http":"http://61.78.63.200:30000","http":"http://94.74.132.129:808","http":"http://157.100.12.138:999","http":"http://210.56.245.10:4145","http":"http://131.0.226.198:9898","http":"http://159.192.121.240:4145","http":"http://177.86.182.56:4153","http":"http://202.70.84.201:4153","http":"http://134.90.244.139:8080","http":"http://91.216.5.110:82","http":"http://74.205.128.200:80","http":"http://118.172.187.127:8080","http":"http://103.220.206.11:59570","http":"http://154.113.66.70:5678","http":"http://91.134.136.29:9000","http":"http://177.5.221.66:8080","http":"http://84.205.17.234:8080","http":"http://203.188.32.107:9812","http":"http://111.91.176.182:80","http":"http://149.154.157.17:5678","http":"http://178.253.206.21:6666","http":"http://122.99.125.85:80","http":"http://139.9.64.238:443","http":"http://95.67.64.162:3128","http":"http://197.159.142.167:8008","http":"http://181.232.190.209:999","http":"http://79.101.55.161:53281","http":"http://141.147.95.36:3128","http":"http://41.65.0.214:1976","http":"http://142.252.198.190:3128","http":"http://151.106.17.124:1080","http":"http://200.188.151.212:8080","http":"http://216.48.177.127:80","http":"http://1.186.85.2:1111","http":"http://45.165.131.46:8080","http":"http://85.209.150.185:8085","http":"http://164.92.67.146:9812","http":"http://142.252.198.65:3128","http":"http://47.91.15.175:80","http":"http://157.100.52.146:999","http":"http://51.83.98.90:80","http":"http://202.8.73.206:41890","http":"http://66.94.120.161:443","http":"http://104.252.179.119:3128","http":"http://94.154.127.21:8085","http":"http://178.169.139.180:8080","http":"http://91.193.253.188:23500"}
#proxy:e.g:{"http":"http://127.0.0.1:8080","https":"https://127.0.0.1:8080"}
#conf.proxy_server = {"http":"http://127.0.0.1:8080","https":"https://127.0.0.1:8080"}  #{"http":"164.155.150.0:80"}
#conf.proxy_server = 

#Debug option
[DebugMode]
#Print payloads and exit the program
conf.debug = 0

#update option
[CheckUpdate]
#Get the latest code from github(Not yet available)
conf.update = 0